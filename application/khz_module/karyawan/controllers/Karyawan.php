<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Karyawan extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Model_karyawan');
        $this->load->library('form_validation');        
	$this->load->library('datatables');
    }

    public function index()    //menampilkan halaman index
    {
        $this->load->view('karyawan/karyawan_list');
    } 
    
    public function json() {   //Encode data yang diparsing dari database dalam format JSON
        header('Content-Type: application/json');
        echo $this->Model_karyawan->json();
    }

    public function read($id)   //Menampilkan halaman Read(menampilkan rincian data)
    {
        $row = $this->Model_karyawan->get_by_id($id);
        if ($row) {
            $data = array(
		'uniqid' => $row->uniqid,
		'no_induk' => $row->no_induk,
		'nama_karyawan' => $row->nama_karyawan,
	    );
            $this->load->view('karyawan/karyawan_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('karyawan'));
        }
    }

    public function create()      //Menampilan halaman Create (tambah data)
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('karyawan/create_action'),
	    'uniqid' => set_value('uniqid'),
	    'no_induk' => set_value('no_induk'),
	    'nama_karyawan' => set_value('nama_karyawan'),
	);
        $this->load->view('karyawan/karyawan_form', $data);
    }
    
    public function create_action()   //   Menjalankan perintah tambah data ke database CREATE
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'no_induk' => $this->input->post('no_induk',TRUE),
		'nama_karyawan' => $this->input->post('nama_karyawan',TRUE),
	    );

            $this->Model_karyawan->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('karyawan'));
        }
    }
    
    public function update($id)    //Menampilkan halaman Update (ubah data)
    {
        $row = $this->Model_karyawan->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('karyawan/update_action'),
		'uniqid' => set_value('uniqid', $row->uniqid),
		'no_induk' => set_value('no_induk', $row->no_induk),
		'nama_karyawan' => set_value('nama_karyawan', $row->nama_karyawan),
	    );
            $this->load->view('karyawan/karyawan_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('karyawan'));
        }
    }
    
    public function update_action()        //Menjalankan perintah rubah data yang ada di database (UPDATE)
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('uniqid', TRUE));
        } else {
            $data = array(
		'no_induk' => $this->input->post('no_induk',TRUE),
		'nama_karyawan' => $this->input->post('nama_karyawan',TRUE),
	    );

            $this->Model_karyawan->update($this->input->post('uniqid', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('karyawan'));
        }
    }
    
    public function delete($id)       //Menjalankan perintah hapus data yang berada di database (Delete)
    {
        $row = $this->Model_karyawan->get_by_id($id);

        if ($row) {
            $this->Model_karyawan->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('karyawan'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('karyawan'));
        }
    }

    public function _rules()   //Menjalankan perintah Validasi terhadap setiap inputan
    {
	$this->form_validation->set_rules('no_induk', 'no induk', 'trim|required|numeric');
	$this->form_validation->set_rules('nama_karyawan', 'nama karyawan', 'trim|required');

	$this->form_validation->set_rules('uniqid', 'uniqid', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Karyawan.php */
/* Location: ./application/controllers/Karyawan.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2019-03-29 05:01:29 */
/* http://harviacode.com */